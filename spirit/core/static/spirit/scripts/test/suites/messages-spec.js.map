{"version":3,"file":"messages-spec.js","sources":["messages-spec.coffee"],"names":[],"mappings":"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","sourcesContent":["describe \"messages plugin tests\", ->\n\n    isHidden = stModules.utils.isHidden\n\n    beforeEach ->\n        fixtures = jasmine.getFixtures()\n        fixtures.fixturesPath = 'base/test/fixtures/'\n        loadFixtures('messages.html')\n\n    it \"attaches all messages\", ->\n        messages = stModules.messages(document.querySelectorAll('.js-messages-dummy'))\n        expect(messages.length).toEqual(2)\n\n    it \"does nothing when no hash\", ->\n        message = document.querySelector('.js-messages-dummy')\n        stModules.messages([message])\n        expect(message.classList.contains('is-fixed')).toEqual(false)\n        expect(isHidden(document.querySelectorAll('.js-messages-close'))).toEqual(true)\n\n    it \"places the messages when there is a hash\", ->\n        org_location_hash = window.location.hash\n        try\n            window.location.hash = \"#p1\"\n            message = document.querySelector('.js-messages')\n            stModules.messages([message])\n            expect(message.classList.contains('is-fixed')).toEqual(true)\n        finally\n            window.location.hash = org_location_hash\n\n    it \"shows all the close buttons\", ->\n        org_location_hash = window.location.hash\n        try\n            window.location.hash = \"#p1\"\n            stModules.messages(document.querySelectorAll('.js-messages'))\n            expect(isHidden(document.querySelectorAll('.js-messages-close'))).toEqual(false)\n        finally\n            window.location.hash = org_location_hash\n\n    it \"closes/hides the message\", ->\n        org_location_hash = window.location.hash\n        try\n            window.location.hash = \"#p1\"\n            messages = document.querySelectorAll('.js-messages')\n            stModules.messages(messages)\n            first_set = document.querySelector('.js-messages').querySelector('.js-messages-set')\n            first_set.querySelector('.js-messages-close-button').click()\n            expect(isHidden([first_set])).toEqual(true)\n            expect(isHidden(messages)).toEqual(false)\n        finally\n            window.location.hash = org_location_hash\n\n    it \"closes/hides the container when no more visible messages\", ->\n        org_location_hash = window.location.hash\n        try\n            window.location.hash = \"#p1\"\n            message = document.querySelector('.js-messages')\n            stModules.messages([message])\n            Array.from(message.querySelectorAll('.js-messages-close-button')).forEach((elm) ->\n                elm.click()\n            )\n            expect(isHidden([message])).toEqual(true)\n            expect(message.classList.contains('is-fixed')).toEqual(false)\n        finally\n            window.location.hash = org_location_hash\n\n    it \"prevents the default click behaviour on close message\", ->\n        evt = document.createEvent(\"HTMLEvents\")\n        evt.initEvent(\"click\", false, true)\n\n        stopPropagation = spyOn(evt, 'stopPropagation')\n        preventDefault = spyOn(evt, 'preventDefault')\n\n        message = document.querySelector('.js-messages')\n        stModules.messages([message])\n        message.querySelector('.js-messages-close-button').dispatchEvent(evt)\n        expect(stopPropagation).toHaveBeenCalled()\n        expect(preventDefault).toHaveBeenCalled()\n"]}